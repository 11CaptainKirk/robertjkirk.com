---
interface Props {
  title: string;
  tags?: string[];
  featuredText?: string;
  description?: string;
  href?: string;
}

const { title, tags, featuredText, description, href } = Astro.props;
---

{
  featuredText && featuredText?.length > 0 ? (
    <div class="bg-gray-50 dark:bg-neutral-900/70 hover:text-blue-500 transition-all hover:scale-[1.02]  hover:border-blue-500 rounded-2xl p-6 border border-gray-200 dark:border-neutral-800">
      <a href={href} class="group">
        <div class="flex flex-row items-center gap-2">
          <span class="text-sm font-medium text-blue-600">{featuredText}</span>
          <span class="inline-block w-1.5 h-1.5 rounded-full bg-blue-600 animate-pulse-small" />
        </div>
        <h3 class="font-medium text-lg my-1 dark:text-neutral-200">{title}</h3>
        <p class="text-gray-600 my-2 dark:text-neutral-500">{description}</p>
        {tags && tags.length > 0 && (
          <div class="flex items-center gap-2 mt-4">
            {tags.map((tag, index) => (
              <>
                <span class="text-sm text-gray-500 dark:text-neutral-600">
                  {tag}
                </span>
                {index < tags.length - 1 && (
                  <span class="inline-block w-1 h-1 rounded-full bg-gray-500" />
                )}
              </>
            ))}
          </div>
        )}
      </a>
    </div>
  ) : (
    <div class="group bg-white dark:bg-black rounded-xl p-4 cursor-pointer hover:bg-gray-50 dark:hover:bg-neutral-900/70 hover:border-blue-500 transition-all hover:scale-[1.02]  border border-gray-200 dark:border-neutral-800">
      <a href={href} class=" ">
        <div class="flex flex-col gap-1">
          <div class="flex flex-col">
            <h3 class="font-medium  transition-colors dark:text-neutral-200">
              {title}
            </h3>
            {description && (
              <p class="text-gray-600 my-2 dark:text-neutral-500">
                {description}
              </p>
            )}
          </div>
          {tags && tags.length > 0 && (
            <div class="flex items-center gap-2 mt-4">
              {tags.map((tag, index) => (
                <>
                  <span class="text-sm text-gray-500 dark:text-neutral-600">
                    {tag}
                  </span>
                  {index < tags.length - 1 && (
                    <span class="inline-block w-1 h-1 rounded-full bg-gray-500" />
                  )}
                </>
              ))}
            </div>
          )}
        </div>
      </a>
    </div>
  )
}
