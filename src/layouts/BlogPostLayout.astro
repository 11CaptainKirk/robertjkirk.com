---
import Layout from "./Layout.astro";

// src/layouts/BlogPostLayout.astro
const { postData } = Astro.props;
import ShareButton from "../components/ShareButton.astro";
import XShare from "../components/XShare.astro";

const siteUrl = postData.siteUrl || Astro.site || 'https://yoursite.com';
const canonicalURL = new URL(postData.slug, siteUrl).toString();
const imageUrl = postData.image ? new URL(postData.image, siteUrl).toString() : '';
---

<Layout>
    <Fragment slot="head">
    <!-- Basic Meta Tags -->
    <title>{postData.title}</title>
    <meta name="description" content={postData.description} />
    <link rel="canonical" href={canonicalURL} />

    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="article" />
    <meta property="og:url" content={canonicalURL} />
    <meta property="og:title" content={postData.title} />
    <meta property="og:description" content={postData.description} />
    {imageUrl && <meta property="og:image" content={imageUrl} />}
    <meta property="og:site_name" content="Your Site Name" />
    {postData.author && <meta property="article:author" content={postData.author} />}
    <meta property="article:published_time" content={postData.date} />

    <!-- Twitter -->
    <meta name="twitter:card" content={imageUrl ? "summary_large_image" : "summary"} />
    <meta name="twitter:url" content={canonicalURL} />
    <meta name="twitter:title" content={postData.title} />
    <meta name="twitter:description" content={postData.description} />
    {imageUrl && <meta name="twitter:image" content={imageUrl} />}
    
    <!-- Optional: If you have a Twitter handle -->
    <!-- <meta name="twitter:site" content="@yourusername" /> -->
    <!-- <meta name="twitter:creator" content="@yourusername" /> -->
  </Fragment>
  <div class="min-h-screen p-4 xl:p-8 transition-all">
    <div class="max-w-3xl mx-auto">
      <!-- Header with Back Link -->
      <!-- <nav class="mb-12">
      <a 
        href="/writing" 
        class="text-gray-600 hover:text-blue-600 transition-colors inline-flex items-center gap-2"
      >
        <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-arrow-left"><path d="m12 19-7-7 7-7"/><path d="M19 12H5"/></svg> Back 
      </a>
    </nav> -->

      <!-- Article -->
      <article
        class="bg-white dark:bg-black rounded-3xl p-6 md:p-12 transition-all shadow-sm border border-gray-100 dark:border-zinc-900"
      >
        <div
          class="sticky top-4 float-right cursor-pointer z-50 gap-5 flex sm:flex-row flex-col bg-white/10 backdrop-blur-lg sm:px-4 sm:py-1 px-2 py-2 rounded-3xl"
        >
          <XShare />
          <ShareButton
            title={postData.title}
            text={postData.description}
            url={postData.slug}
          />
        </div>
        <header class="mb-8 relative mr-12">
          <!-- <a
      href=`https://twitter.com/share?url=${encodeURIComponent(Astro.url)}&text=Check%20out%20this%20article!`
      target="_blank"
      rel="noopener noreferrer"
      aria-label="Share this article on Twitter"
      class="sticky top-4 float-right bg-gray-100  text-sm px-3 py-3 rounded-full border border-blue-500 text-blue-500 transition-colors"
      aria-label="Share this article"
    >
      <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-share"><path d="M4 12v8a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-8"/><polyline points="16 6 12 2 8 6"/><line x1="12" x2="12" y1="2" y2="15"/></svg>
      </a> -->
          <!-- <ShareButton 
  title="𝕏"
  text="Check out this great article!"
  url="https://example.com/article"
/> -->

          <div class="flex items-center gap-2 text-sm text-gray-500 dark:text-neutral-500 mb-3">
            <time datetime={postData.date}>{postData.formattedDate}</time>
            <span class="inline-block w-1.5 h-1.5 rounded-full bg-gray-500"
            ></span>
            <span>{postData.readingTime} min read </span>
          </div>
          <h1 class="text-4xl font-bold text-gray-900 dark:text-neutral-300 mb-4">
            {postData.title}
          </h1>
          <p class="text-xl text-gray-600 dark:text-neutral-400">
            {postData.description}
          </p>
          <div class="flex flex-wrap mt-2">
            {
              postData.tags.map((tag: string, index: number) => {
                return (
                  <span class=" bg-gray-100 text-gray-500 dark:text-neutral-500 dark:bg-neutral-500/30 text-sm px-2 py-1 rounded-full mt-4 mr-2">
                    {tag}
                  </span>
                );
              })
            }
          </div>

          <hr class="my-8 mb-12 border-t border-gray-300 dark:border-neutral-700" />
        </header>

        <!-- Article Content -->
        <div class="prose prose-lg prose-gray max-w-none dark:text-neutral-400 dark:prose-invert">
          <slot />
        </div>
      </article>
    </div>
  </div>
</Layout>
